class Solution {
public:
    // Existing integer break code
    int t[59];
    int solve(int n) {
        if(n == 1) return 1;
        if(t[n] != -1) return t[n];
        
        int result = INT_MIN;
        for(int i = 1; i < n; i++) {
            int prod = i * max(n-i, solve(n-i));
            result = max(result, prod);
        }
        return t[n] = result;
    }
    
    int integerBreak(int n) {
        if(n == 2) return 1;
        if(n == 3) return 2;
        memset(t, -1, sizeof(t));
        return solve(n);
    }

    // New method to check power of four
    bool isPowerOfFour(int n) {
        if(n <= 0) return false;
        // Check if it's a power of 2 and the 1-bit is in odd position
        return (n & (n - 1)) == 0 && (n & 0x55555555) != 0;
    }
};
